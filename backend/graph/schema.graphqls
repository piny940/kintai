scalar Time

enum WorkerStatus {
  ACTIVE
  INACTIVE
}
type WorkerName {
  firstName: String!
  lastName: String!
}
type Worker {
  id: Int!
  status: WorkerStatus!
  email: String!
  name: WorkerName!
  createdAt: Time!
  updatedAt: Time!
}
type Company {
  id: Int!
  name: String!
  createdAt: Time!
  updatedAt: Time!
}
enum EmploymentKind {
  ADMIN
  MEMBER
}
enum EmploymentStatus {
  ACTIVE
  INACTIVE
}
type Employment {
  id: Int!
  kind: EmploymentKind!
  status: EmploymentStatus!
  companyId: Int!
  workerId: Int!
  createdAt: Time!
  updatedAt: Time!
}

enum WorkStatus {
  WORKING
  LEFT
}

type DesiredShift {
  id: Int!
  since: String!
  till: String!
  employmentId: Int!
  createdAt: Time!
  updatedAt: Time!
}
type Query {
  me: Worker
}
type Mutation {
  login(email: String!, password: String!): Worker
}
