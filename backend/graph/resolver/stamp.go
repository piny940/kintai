package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"kintai_backend/domain"
	"kintai_backend/graph/model"
	"kintai_backend/registry"
)

func (r *mutationResolver) PushStamp(ctx context.Context, companyID uint) (*model.Stamp, error) {
	registry := registry.GetRegistry()
	worker, err := currentWorker(ctx)
	if err != nil {
		return nil, newError(err, "ログインしてください")
	}
	company, err := registry.CompanyRepo().FindById(worker.ID, domain.CompanyID(companyID))
	if err != nil {
		return nil, newError(err, "会社IDが適切ではありません")
	}
	stamp, err := registry.StampUseCase().PushStamp(company.ID, worker.ID)
	if err != nil {
		return nil, newError(err, "打刻に失敗しました")
	}
	return model.NewStamp(stamp), nil
}
